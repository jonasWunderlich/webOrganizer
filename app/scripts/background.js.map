{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"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","file":"background.js","sourcesContent":["'use strict';\n\n/**\n * @name setBadgeText\n * @description Writes the Text into the Badge beneath the Plugin-Icon\n * @param text\n */\nfunction setBadgeText(text) {\n  chrome.browserAction.setBadgeText({ text: text });\n}\n\n\n\nfunction listenToTabEvents() {\n\n  var lastPage = '';\n  var tabConnections = {};\n\n  tabConnections = chrome.storage.local.get('tabConnections', function(result) {\n    if (result.tabConnections !== null) {\n      console.log('Retrieved existing TabConnections from storage');\n      tabConnections = result.tabConnections;\n      //return tabConnections;\n    }\n  });\n\n\n  /**\n   * @name setTabConnnection\n   * @description\n   * @param {object} tab   [The Tab that was opened (hopefully)]\n   */\n  function setTabConnection(tab) {\n\n    // Check for openerTabId: that tells us a new Tab was actually created [by an existing Tab]\n    if (typeof tab.openerTabId !== 'undefined') {\n      console.log('tab opened: ', tab.url);\n\n      // Get the openerTab\n      return chrome.tabs.get(tab.openerTabId, function(openerTab) {\n        if (openerTab.url !== 'chrome://newtab/' && tab.url !== 'chrome://newtab/') {\n\n          // Get the Visits of the new Tab\n          return chrome.history.getVisits({url: tab.url}, function(visits) {\n            if (visits.length > 0) {\n              var lastVisitId = visits[visits.length - 1].visitId;\n\n              // Get the Visits of the openerTab\n              return chrome.history.getVisits({url: openerTab.url}, function(openerVisits) {\n                // Write the Connection between the Tabs in the Storage\n                var openerLastVisitId = openerVisits[openerVisits.length - 1].visitId;\n                tabConnections[lastVisitId] = openerLastVisitId;\n                console.log('Writing Connection: VisitId '+lastVisitId+' was opened by '+openerLastVisitId);\n                return chrome.storage.local.set({'tabConnections': tabConnections});\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n\n\n  chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {\n    // Get the already existing TabConnections from Storage\n    if (changeInfo.status === 'complete') {\n      return setTabConnection(tab);\n    }\n  });\n\n  chrome.webNavigation.onCommitted.addListener(function(details) {\n    if (details.transitionQualifiers) {\n      if (details.transitionQualifiers === 'forward_back') {\n        lastPage = details.url;\n        return lastPage;\n      }\n    }\n  });\n\n}\n\n\nfunction setupStorage() {\n  chrome.storage.local.get(function(response) {\n\n    if(Object.keys(response).length === 0) {\n      console.log('no local Data stored - trying to build');\n      var storageData = {\n        'configuration' : {\n          'maxResults': 50\n        },\n        'contextOptions': {},\n        'tabConnections': {}\n      };\n      chrome.storage.local.set(storageData, function(response) {\n        console.log('storageData was initialized', response);\n      });\n    } else {\n      console.log('local Data found :-)');\n    }\n  });\n}\n\n\n/**\n * @name setupTabMenu\n * @description Creates an entry into the ContextMenu and listens to ClickEvents\n */\n//var setupTabMenu = function() {\n//\n//  chrome.contextMenus.create({\n//    title: 'WebOrganiser',\n//    id:'selectFromContextMenu',\n//    contexts: ['all']\n//  }, function() {\n//    var error = chrome.runtime.lastError;\n//    if(error) {\n//      console.log(error);\n//    }\n//    else {\n//      console.log('Context menu created');\n//    }\n//  });\n//\n//  chrome.contextMenus.onClicked.addListener(function(tab) {\n//    console.log(tab);\n//  });\n//\n//};\n\n\n/**\n * @name _init\n * @description initializes all the different background-functions\n * @private\n */\nfunction _init() {\n\n  chrome.runtime.onInstalled.addListener(function (details) {\n    console.log('WebOrganizer installed / updated');\n    console.log('previousVersion', details.previousVersion);\n    setupStorage();\n  });\n\n  setBadgeText('bg');\n  listenToTabEvents();\n}\n\n_init();\n\n//# sourceMappingURL=background.js.map"]}